"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y";
exports.ids = ["vendor-chunks/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js":
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js ***!
  \********************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAlgoliaInsightsPlugin: () => (/* binding */ createAlgoliaInsightsPlugin)\n/* harmony export */ });\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-shared@1.17.4_@algolia+client-search@5.8.0_algoliasearch@5.8.0/node_modules/@algolia/autocomplete-shared/dist/esm/debounce.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-shared@1.17.4_@algolia+client-search@5.8.0_algoliasearch@5.8.0/node_modules/@algolia/autocomplete-shared/dist/esm/safelyRunOnBrowser.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-shared@1.17.4_@algolia+client-search@5.8.0_algoliasearch@5.8.0/node_modules/@algolia/autocomplete-shared/dist/esm/createRef.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-shared@1.17.4_@algolia+client-search@5.8.0_algoliasearch@5.8.0/node_modules/@algolia/autocomplete-shared/dist/esm/isEqual.js\");\n/* harmony import */ var _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @algolia/autocomplete-shared */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-shared@1.17.4_@algolia+client-search@5.8.0_algoliasearch@5.8.0/node_modules/@algolia/autocomplete-shared/dist/esm/noop.js\");\n/* harmony import */ var _createClickedEvent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createClickedEvent */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js\");\n/* harmony import */ var _createSearchInsightsApi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createSearchInsightsApi */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js\");\n/* harmony import */ var _createViewedEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createViewedEvents */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js\");\n/* harmony import */ var _isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./isAlgoliaInsightsHit */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\nvar VIEW_EVENT_DELAY = 400;\nvar ALGOLIA_INSIGHTS_VERSION = '2.15.0';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nvar sendViewedObjectIDs = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.debounce)(function (_ref) {\n  var onItemsChange = _ref.onItemsChange,\n    items = _ref.items,\n    insights = _ref.insights,\n    state = _ref.state;\n  onItemsChange({\n    insights: insights,\n    insightsEvents: (0,_createViewedEvents__WEBPACK_IMPORTED_MODULE_1__.createViewedEvents)({\n      items: items\n    }).map(function (event) {\n      return _objectSpread({\n        eventName: 'Items Viewed'\n      }, event);\n    }),\n    state: state\n  });\n}, VIEW_EVENT_DELAY);\nfunction createAlgoliaInsightsPlugin(options) {\n  var _getOptions = getOptions(options),\n    providedInsightsClient = _getOptions.insightsClient,\n    insightsInitParams = _getOptions.insightsInitParams,\n    onItemsChange = _getOptions.onItemsChange,\n    onSelectEvent = _getOptions.onSelect,\n    onActiveEvent = _getOptions.onActive,\n    __autocomplete_clickAnalytics = _getOptions.__autocomplete_clickAnalytics;\n  var insightsClient = providedInsightsClient;\n  if (!providedInsightsClient) {\n    (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_2__.safelyRunOnBrowser)(function (_ref2) {\n      var window = _ref2.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        insightsClient = window[pointer];\n      }\n      if (!insightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n        }\n        window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n        insightsClient = window[pointer];\n        loadInsights(window);\n      }\n    });\n  }\n\n  // We return an empty plugin if `insightsClient` is still undefined at\n  // this stage, which can happen in server environments.\n  if (!insightsClient) {\n    return {};\n  }\n  if (insightsInitParams) {\n    insightsClient('init', _objectSpread({\n      partial: true\n    }, insightsInitParams));\n  }\n  var insights = (0,_createSearchInsightsApi__WEBPACK_IMPORTED_MODULE_3__.createSearchInsightsApi)(insightsClient);\n  var previousItems = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_4__.createRef)([]);\n  var debouncedOnStateChange = (0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_0__.debounce)(function (_ref3) {\n    var state = _ref3.state;\n    if (!state.isOpen) {\n      return;\n    }\n    var items = state.collections.reduce(function (acc, current) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(current.items));\n    }, []).filter(_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit);\n    if (!(0,_algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_6__.isEqual)(previousItems.current.map(function (x) {\n      return x.objectID;\n    }), items.map(function (x) {\n      return x.objectID;\n    }))) {\n      previousItems.current = items;\n      if (items.length > 0) {\n        sendViewedObjectIDs({\n          onItemsChange: onItemsChange,\n          items: items,\n          insights: insights,\n          state: state\n        });\n      }\n    }\n  }, 0);\n  return {\n    name: 'aa.algoliaInsightsPlugin',\n    subscribe: function subscribe(_ref4) {\n      var setContext = _ref4.setContext,\n        onSelect = _ref4.onSelect,\n        onActive = _ref4.onActive;\n      var isAuthenticatedToken = false;\n      function setInsightsContext(userToken) {\n        setContext({\n          algoliaInsightsPlugin: {\n            __algoliaSearchParameters: _objectSpread(_objectSpread({}, __autocomplete_clickAnalytics ? {\n              clickAnalytics: true\n            } : {}), userToken ? {\n              userToken: normalizeUserToken(userToken)\n            } : {}),\n            insights: insights\n          }\n        });\n      }\n      insightsClient('addAlgoliaAgent', 'insights-plugin');\n      setInsightsContext();\n\n      // Handles user token changes\n      insightsClient('onUserTokenChange', function (userToken) {\n        if (!isAuthenticatedToken) {\n          setInsightsContext(userToken);\n        }\n      });\n      insightsClient('getUserToken', null, function (_error, userToken) {\n        if (!isAuthenticatedToken) {\n          setInsightsContext(userToken);\n        }\n      });\n\n      // Handles authenticated user token changes\n      insightsClient('onAuthenticatedUserTokenChange', function (authenticatedUserToken) {\n        if (authenticatedUserToken) {\n          isAuthenticatedToken = true;\n          setInsightsContext(authenticatedUserToken);\n        } else {\n          isAuthenticatedToken = false;\n          insightsClient('getUserToken', null, function (_error, userToken) {\n            return setInsightsContext(userToken);\n          });\n        }\n      });\n      insightsClient('getAuthenticatedUserToken', null, function (_error, authenticatedUserToken) {\n        if (authenticatedUserToken) {\n          isAuthenticatedToken = true;\n          setInsightsContext(authenticatedUserToken);\n        }\n      });\n      onSelect(function (_ref5) {\n        var item = _ref5.item,\n          state = _ref5.state,\n          event = _ref5.event,\n          source = _ref5.source;\n        if (!(0,_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)(item)) {\n          return;\n        }\n        onSelectEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Selected'\n          }, (0,_createClickedEvent__WEBPACK_IMPORTED_MODULE_7__.createClickedEvent)({\n            item: item,\n            items: source.getItems().filter(_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)\n          }))]\n        });\n      });\n      onActive(function (_ref6) {\n        var item = _ref6.item,\n          source = _ref6.source,\n          state = _ref6.state,\n          event = _ref6.event;\n        if (!(0,_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)(item)) {\n          return;\n        }\n        onActiveEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Active'\n          }, (0,_createClickedEvent__WEBPACK_IMPORTED_MODULE_7__.createClickedEvent)({\n            item: item,\n            items: source.getItems().filter(_isAlgoliaInsightsHit__WEBPACK_IMPORTED_MODULE_5__.isAlgoliaInsightsHit)\n          }))]\n        });\n      });\n    },\n    onStateChange: function onStateChange(_ref7) {\n      var state = _ref7.state;\n      debouncedOnStateChange({\n        state: state\n      });\n    },\n    __autocomplete_pluginOptions: options\n  };\n}\nfunction getAlgoliaSources() {\n  var _context$algoliaInsig;\n  var algoliaSourceBase = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var context = arguments.length > 1 ? arguments[1] : undefined;\n  return [].concat(_toConsumableArray(algoliaSourceBase), ['autocomplete-internal'], _toConsumableArray((_context$algoliaInsig = context.algoliaInsightsPlugin) !== null && _context$algoliaInsig !== void 0 && _context$algoliaInsig.__automaticInsights ? ['autocomplete-automatic'] : []));\n}\nfunction getOptions(options) {\n  return _objectSpread({\n    onItemsChange: function onItemsChange(_ref8) {\n      var insights = _ref8.insights,\n        insightsEvents = _ref8.insightsEvents,\n        state = _ref8.state;\n      insights.viewedObjectIDs.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: getAlgoliaSources(event.algoliaSource, state.context)\n        });\n      })));\n    },\n    onSelect: function onSelect(_ref9) {\n      var insights = _ref9.insights,\n        insightsEvents = _ref9.insightsEvents,\n        state = _ref9.state;\n      insights.clickedObjectIDsAfterSearch.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: getAlgoliaSources(event.algoliaSource, state.context)\n        });\n      })));\n    },\n    onActive: _algolia_autocomplete_shared__WEBPACK_IMPORTED_MODULE_8__.noop,\n    __autocomplete_clickAnalytics: true\n  }, options);\n}\nfunction loadInsights(environment) {\n  var errorMessage = \"[Autocomplete]: Could not load search-insights.js. Please load it manually following https://alg.li/insights-autocomplete\";\n  try {\n    var script = environment.document.createElement('script');\n    script.async = true;\n    script.src = ALGOLIA_INSIGHTS_SRC;\n    script.onerror = function () {\n      // eslint-disable-next-line no-console\n      console.error(errorMessage);\n    };\n    document.body.appendChild(script);\n  } catch (cause) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage);\n  }\n}\n\n/**\n * While `search-insights` supports both string and number user tokens,\n * the Search API only accepts strings. This function normalizes the user token.\n */\nfunction normalizeUserToken(userToken) {\n  return typeof userToken === 'number' ? userToken.toString() : userToken;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createClickedEvent: () => (/* binding */ createClickedEvent)\n/* harmony export */ });\nfunction createClickedEvent(_ref) {\n  var item = _ref.item,\n    _ref$items = _ref.items,\n    items = _ref$items === void 0 ? [] : _ref$items;\n  return {\n    index: item.__autocomplete_indexName,\n    items: [item],\n    positions: [1 + items.findIndex(function (x) {\n      return x.objectID === item.objectID;\n    })],\n    queryID: item.__autocomplete_queryID,\n    algoliaSource: ['autocomplete']\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vY3JlYXRlQ2xpY2tlZEV2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZHVpLXByb3RvY29sLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BhbGdvbGlhK2F1dG9jb21wbGV0ZS1wbHVnaW4tYWxnb2xpYS1pbnNpZ2h0c0AxLjE3LjRfQGFsZ29saWErY2xpZW50LXNlYXJjaEA1LjguMF9hbGdvbGlhc2Vhcl9oaWF3NGQ0eWlrejM2NW15aWRlYTdlaWUzeS9ub2RlX21vZHVsZXMvQGFsZ29saWEvYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzL2Rpc3QvZXNtL2NyZWF0ZUNsaWNrZWRFdmVudC5qcz82ZTAyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDbGlja2VkRXZlbnQoX3JlZikge1xuICB2YXIgaXRlbSA9IF9yZWYuaXRlbSxcbiAgICBfcmVmJGl0ZW1zID0gX3JlZi5pdGVtcyxcbiAgICBpdGVtcyA9IF9yZWYkaXRlbXMgPT09IHZvaWQgMCA/IFtdIDogX3JlZiRpdGVtcztcbiAgcmV0dXJuIHtcbiAgICBpbmRleDogaXRlbS5fX2F1dG9jb21wbGV0ZV9pbmRleE5hbWUsXG4gICAgaXRlbXM6IFtpdGVtXSxcbiAgICBwb3NpdGlvbnM6IFsxICsgaXRlbXMuZmluZEluZGV4KGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4geC5vYmplY3RJRCA9PT0gaXRlbS5vYmplY3RJRDtcbiAgICB9KV0sXG4gICAgcXVlcnlJRDogaXRlbS5fX2F1dG9jb21wbGV0ZV9xdWVyeUlELFxuICAgIGFsZ29saWFTb3VyY2U6IFsnYXV0b2NvbXBsZXRlJ11cbiAgfTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js":
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js ***!
  \****************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSearchInsightsApi: () => (/* binding */ createSearchInsightsApi)\n/* harmony export */ });\n/* harmony import */ var _isModernInsightsClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isModernInsightsClient */ \"(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js\");\nvar _excluded = [\"items\"],\n  _excluded2 = [\"items\"];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction chunk(item) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n  for (var i = 0; i < item.objectIDs.length; i += chunkSize) {\n    chunks.push(_objectSpread(_objectSpread({}, item), {}, {\n      objectIDs: item.objectIDs.slice(i, i + chunkSize)\n    }));\n  }\n  return chunks;\n}\nfunction mapToInsightsParamsApi(params) {\n  return params.map(function (_ref) {\n    var items = _ref.items,\n      param = _objectWithoutProperties(_ref, _excluded);\n    return _objectSpread(_objectSpread({}, param), {}, {\n      objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref2) {\n        var objectID = _ref2.objectID;\n        return objectID;\n      })) || param.objectIDs\n    });\n  });\n}\nfunction createSearchInsightsApi(searchInsights) {\n  var canSendHeaders = (0,_isModernInsightsClient__WEBPACK_IMPORTED_MODULE_0__.isModernInsightsClient)(searchInsights);\n  function sendToInsights(method, payloads, items) {\n    if (canSendHeaders && typeof items !== 'undefined') {\n      var _items$0$__autocomple = items[0].__autocomplete_algoliaCredentials,\n        appId = _items$0$__autocomple.appId,\n        apiKey = _items$0$__autocomple.apiKey;\n      var headers = {\n        'X-Algolia-Application-Id': appId,\n        'X-Algolia-API-Key': apiKey\n      };\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads), [{\n        headers: headers\n      }]));\n    } else {\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads)));\n    }\n  }\n  return {\n    /**\n     * Initializes Insights with Algolia credentials.\n     */\n    init: function init(appId, apiKey) {\n      searchInsights('init', {\n        appId: appId,\n        apiKey: apiKey\n      });\n    },\n    /**\n     * Sets the authenticated user token to attach to events.\n     * Unsets the authenticated token by passing `undefined`.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/set-authenticated-user-token/\n     */\n    setAuthenticatedUserToken: function setAuthenticatedUserToken(authenticatedUserToken) {\n      searchInsights('setAuthenticatedUserToken', authenticatedUserToken);\n    },\n    /**\n     * Sets the user token to attach to events.\n     */\n    setUserToken: function setUserToken(userToken) {\n      searchInsights('setUserToken', userToken);\n    },\n    /**\n     * Sends click events to capture a query and its clicked items and positions.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids-after-search/\n     */\n    clickedObjectIDsAfterSearch: function clickedObjectIDsAfterSearch() {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids/\n     */\n    clickedObjectIDs: function clickedObjectIDs() {\n      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        params[_key2] = arguments[_key2];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture the filters a user clicks on.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-filters/\n     */\n    clickedFilters: function clickedFilters() {\n      for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        params[_key3] = arguments[_key3];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['clickedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends conversion events to capture a query and its clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids-after-search/\n     */\n    convertedObjectIDsAfterSearch: function convertedObjectIDsAfterSearch() {\n      for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        params[_key4] = arguments[_key4];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids/\n     */\n    convertedObjectIDs: function convertedObjectIDs() {\n      for (var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        params[_key5] = arguments[_key5];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture the filters a user uses when converting.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-filters/\n     */\n    convertedFilters: function convertedFilters() {\n      for (var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        params[_key6] = arguments[_key6];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['convertedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends view events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-object-ids/\n     */\n    viewedObjectIDs: function viewedObjectIDs() {\n      for (var _len7 = arguments.length, params = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        params[_key7] = arguments[_key7];\n      }\n      if (params.length > 0) {\n        params.reduce(function (acc, _ref3) {\n          var items = _ref3.items,\n            param = _objectWithoutProperties(_ref3, _excluded2);\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(chunk(_objectSpread(_objectSpread({}, param), {}, {\n            objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref4) {\n              var objectID = _ref4.objectID;\n              return objectID;\n            })) || param.objectIDs\n          })).map(function (payload) {\n            return {\n              items: items,\n              payload: payload\n            };\n          })));\n        }, []).forEach(function (_ref5) {\n          var items = _ref5.items,\n            payload = _ref5.payload;\n          return sendToInsights('viewedObjectIDs', [payload], items);\n        });\n      }\n    },\n    /**\n     * Sends view events to capture the filters a user uses when viewing.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-filters/\n     */\n    viewedFilters: function viewedFilters() {\n      for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        params[_key8] = arguments[_key8];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['viewedFilters'].concat(params));\n      }\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createViewedEvents: () => (/* binding */ createViewedEvents)\n/* harmony export */ });\nfunction createViewedEvents(_ref) {\n  var items = _ref.items;\n  var itemsByIndexName = items.reduce(function (acc, current) {\n    var _acc$current$__autoco;\n    acc[current.__autocomplete_indexName] = ((_acc$current$__autoco = acc[current.__autocomplete_indexName]) !== null && _acc$current$__autoco !== void 0 ? _acc$current$__autoco : []).concat(current);\n    return acc;\n  }, {});\n  return Object.keys(itemsByIndexName).map(function (indexName) {\n    var items = itemsByIndexName[indexName];\n    return {\n      index: indexName,\n      items: items,\n      algoliaSource: ['autocomplete']\n    };\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vY3JlYXRlVmlld2VkRXZlbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLElBQUk7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktcHJvdG9jb2wvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vY3JlYXRlVmlld2VkRXZlbnRzLmpzP2Y4OGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZpZXdlZEV2ZW50cyhfcmVmKSB7XG4gIHZhciBpdGVtcyA9IF9yZWYuaXRlbXM7XG4gIHZhciBpdGVtc0J5SW5kZXhOYW1lID0gaXRlbXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGN1cnJlbnQpIHtcbiAgICB2YXIgX2FjYyRjdXJyZW50JF9fYXV0b2NvO1xuICAgIGFjY1tjdXJyZW50Ll9fYXV0b2NvbXBsZXRlX2luZGV4TmFtZV0gPSAoKF9hY2MkY3VycmVudCRfX2F1dG9jbyA9IGFjY1tjdXJyZW50Ll9fYXV0b2NvbXBsZXRlX2luZGV4TmFtZV0pICE9PSBudWxsICYmIF9hY2MkY3VycmVudCRfX2F1dG9jbyAhPT0gdm9pZCAwID8gX2FjYyRjdXJyZW50JF9fYXV0b2NvIDogW10pLmNvbmNhdChjdXJyZW50KTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSk7XG4gIHJldHVybiBPYmplY3Qua2V5cyhpdGVtc0J5SW5kZXhOYW1lKS5tYXAoZnVuY3Rpb24gKGluZGV4TmFtZSkge1xuICAgIHZhciBpdGVtcyA9IGl0ZW1zQnlJbmRleE5hbWVbaW5kZXhOYW1lXTtcbiAgICByZXR1cm4ge1xuICAgICAgaW5kZXg6IGluZGV4TmFtZSxcbiAgICAgIGl0ZW1zOiBpdGVtcyxcbiAgICAgIGFsZ29saWFTb3VyY2U6IFsnYXV0b2NvbXBsZXRlJ11cbiAgICB9O1xuICB9KTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js":
/*!*************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js ***!
  \*************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAlgoliaInsightsHit: () => (/* binding */ isAlgoliaInsightsHit)\n/* harmony export */ });\nfunction isAlgoliaInsightsHit(hit) {\n  return hit.objectID && hit.__autocomplete_indexName && hit.__autocomplete_queryID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vaXNBbGdvbGlhSW5zaWdodHNIaXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kdWktcHJvdG9jb2wvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vaXNBbGdvbGlhSW5zaWdodHNIaXQuanM/NjkyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNBbGdvbGlhSW5zaWdodHNIaXQoaGl0KSB7XG4gIHJldHVybiBoaXQub2JqZWN0SUQgJiYgaGl0Ll9fYXV0b2NvbXBsZXRlX2luZGV4TmFtZSAmJiBoaXQuX19hdXRvY29tcGxldGVfcXVlcnlJRDtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js":
/*!***************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js ***!
  \***************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isModernInsightsClient: () => (/* binding */ isModernInsightsClient)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nfunction isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/camelcase */\n  var v3 = major >= 3;\n  var v2_4 = major === 2 && minor >= 4;\n  var v1_10 = major === 1 && minor >= 10;\n  return v3 || v2_4 || v1_10;\n  /* eslint-enable @typescript-eslint/camelcase */\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGFsZ29saWErYXV0b2NvbXBsZXRlLXBsdWdpbi1hbGdvbGlhLWluc2lnaHRzQDEuMTcuNF9AYWxnb2xpYStjbGllbnQtc2VhcmNoQDUuOC4wX2FsZ29saWFzZWFyX2hpYXc0ZDR5aWt6MzY1bXlpZGVhN2VpZTN5L25vZGVfbW9kdWxlcy9AYWxnb2xpYS9hdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHMvZGlzdC9lc20vaXNNb2Rlcm5JbnNpZ2h0c0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsa0NBQWtDO0FBQ2xDLDhCQUE4QjtBQUM5QixrREFBa0QsZ0JBQWdCLGdFQUFnRSx3REFBd0QsNkRBQTZELHNEQUFzRDtBQUM3Uyx1Q0FBdUMsdURBQXVELHVDQUF1QyxTQUFTLHVCQUF1QjtBQUNySyx5Q0FBeUMseUdBQXlHLGtCQUFrQixpREFBaUQsTUFBTSw4Q0FBOEMsK0JBQStCLFdBQVcsWUFBWSw2RUFBNkUsWUFBWSxjQUFjLHFCQUFxQixVQUFVLE1BQU0saUZBQWlGLFVBQVUsc0JBQXNCO0FBQzVqQixnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFpbHdpbmR1aS1wcm90b2NvbC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AYWxnb2xpYSthdXRvY29tcGxldGUtcGx1Z2luLWFsZ29saWEtaW5zaWdodHNAMS4xNy40X0BhbGdvbGlhK2NsaWVudC1zZWFyY2hANS44LjBfYWxnb2xpYXNlYXJfaGlhdzRkNHlpa3ozNjVteWlkZWE3ZWllM3kvbm9kZV9tb2R1bGVzL0BhbGdvbGlhL2F1dG9jb21wbGV0ZS1wbHVnaW4tYWxnb2xpYS1pbnNpZ2h0cy9kaXN0L2VzbS9pc01vZGVybkluc2lnaHRzQ2xpZW50LmpzPzU5ODciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgYXJyMltpXSA9IGFycltpXTsgcmV0dXJuIGFycjI7IH1cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgdmFyIF9pID0gbnVsbCA9PSBhcnIgPyBudWxsIDogXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07IGlmIChudWxsICE9IF9pKSB7IHZhciBfcywgX2UsIF94LCBfciwgX2FyciA9IFtdLCBfbiA9ICEwLCBfZCA9ICExOyB0cnkgeyBpZiAoX3ggPSAoX2kgPSBfaS5jYWxsKGFycikpLm5leHQsIDAgPT09IGkpIHsgaWYgKE9iamVjdChfaSkgIT09IF9pKSByZXR1cm47IF9uID0gITE7IH0gZWxzZSBmb3IgKDsgIShfbiA9IChfcyA9IF94LmNhbGwoX2kpKS5kb25lKSAmJiAoX2Fyci5wdXNoKF9zLnZhbHVlKSwgX2Fyci5sZW5ndGggIT09IGkpOyBfbiA9ICEwKTsgfSBjYXRjaCAoZXJyKSB7IF9kID0gITAsIF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIG51bGwgIT0gX2kucmV0dXJuICYmIChfciA9IF9pLnJldHVybigpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IH1cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGEgZ2l2ZW4gaW5zaWdodHMgYGNsaWVudGAgc3VwcG9ydHMgdGhlIG9wdGlvbmFsIGNhbGwgdG8gYGluaXRgXG4gKiBhbmQgdGhlIGFiaWxpdHkgdG8gc2V0IGNyZWRlbnRpYWxzIHZpYSBleHRyYSBwYXJhbWV0ZXJzIHdoZW4gc2VuZGluZyBldmVudHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc01vZGVybkluc2lnaHRzQ2xpZW50KGNsaWVudCkge1xuICB2YXIgX3NwbGl0JG1hcCA9IChjbGllbnQudmVyc2lvbiB8fCAnJykuc3BsaXQoJy4nKS5tYXAoTnVtYmVyKSxcbiAgICBfc3BsaXQkbWFwMiA9IF9zbGljZWRUb0FycmF5KF9zcGxpdCRtYXAsIDIpLFxuICAgIG1ham9yID0gX3NwbGl0JG1hcDJbMF0sXG4gICAgbWlub3IgPSBfc3BsaXQkbWFwMlsxXTtcblxuICAvKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvY2FtZWxjYXNlICovXG4gIHZhciB2MyA9IG1ham9yID49IDM7XG4gIHZhciB2Ml80ID0gbWFqb3IgPT09IDIgJiYgbWlub3IgPj0gNDtcbiAgdmFyIHYxXzEwID0gbWFqb3IgPT09IDEgJiYgbWlub3IgPj0gMTA7XG4gIHJldHVybiB2MyB8fCB2Ml80IHx8IHYxXzEwO1xuICAvKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2UgKi9cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@algolia+autocomplete-plugin-algolia-insights@1.17.4_@algolia+client-search@5.8.0_algoliasear_hiaw4d4yikz365myidea7eie3y/node_modules/@algolia/autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js\n");

/***/ })

};
;